name: 'Create PR Checklist'
on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  pull-requests: write
  statuses: write
  issues: write  # needed to add labels
  contents: read # needed to get collaborators

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Check if PR author is a maintainer
        id: check_maintainer
        uses: actions/github-script@v6
        with:
          script: |
            // Fetch the PR author
            const prUser = context.payload.pull_request.user.login;

            // Check if author is a collaborator (maintainer)
            try {
              const { data: isCollaborator } = await github.rest.repos.checkCollaborator({
                owner: context.repo.owner,
                repo: context.repo.repo,
                username: prUser,
              });
              core.setOutput("is_maintainer", true);
            } catch (error) {
              // If 404, user is not a collaborator
              core.setOutput("is_maintainer", false);
            }
            
      - name: Add labels
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              labels: ['community']
            });
            
      - name: Create pending statuses
        uses: actions/github-script@v6
        with:
          script: |
            const checklist = [
              { key: "tests", context: "Run tests" },
              { key: "review", context: "Code review approved" },
              { key: "deploy", context: "Deploy to production" },
            ];
            for (const item of checklist) {
              await github.rest.repos.createCommitStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                sha: context.payload.pull_request.head.sha,
                state: 'pending',
                context: item.context,
                description: 'Awaiting manual approval via checklist',
              });
            }
      - name: Create PR checklist comment
        uses: wadackel/checkbox-workflow-action@v1
        with:
          id: pr-checklist
          number: ${{ github.event.pull_request.number }}
          config: |
            [
              {"tests": "Run tests"},
              {"review": "Code review approved"},
              {"deploy": "Deploy to production"}
            ]
          message: |
            ## PR Checklist
            {{body}}
